/*
 * This file is generated by jOOQ.
*/
package ORM.tables;


import ORM.Indexes;
import ORM.Keys;
import ORM.MallardDev;
import ORM.tables.records.FollowRelationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FollowRelation extends TableImpl<FollowRelationRecord> {

    private static final long serialVersionUID = 727937302;

    /**
     * The reference instance of <code>mallard_dev.follow_relation</code>
     */
    public static final FollowRelation FOLLOW_RELATION = new FollowRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FollowRelationRecord> getRecordType() {
        return FollowRelationRecord.class;
    }

    /**
     * The column <code>mallard_dev.follow_relation.id</code>.
     */
    public final TableField<FollowRelationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mallard_dev.follow_relation.followee</code>.
     */
    public final TableField<FollowRelationRecord, Integer> FOLLOWEE = createField("followee", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mallard_dev.follow_relation.follower</code>.
     */
    public final TableField<FollowRelationRecord, Integer> FOLLOWER = createField("follower", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mallard_dev.follow_relation.isValid</code>.
     */
    public final TableField<FollowRelationRecord, Byte> ISVALID = createField("isValid", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>mallard_dev.follow_relation</code> table reference
     */
    public FollowRelation() {
        this(DSL.name("follow_relation"), null);
    }

    /**
     * Create an aliased <code>mallard_dev.follow_relation</code> table reference
     */
    public FollowRelation(String alias) {
        this(DSL.name(alias), FOLLOW_RELATION);
    }

    /**
     * Create an aliased <code>mallard_dev.follow_relation</code> table reference
     */
    public FollowRelation(Name alias) {
        this(alias, FOLLOW_RELATION);
    }

    private FollowRelation(Name alias, Table<FollowRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private FollowRelation(Name alias, Table<FollowRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MallardDev.MALLARD_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FOLLOW_RELATION_FOLLOW_RELATION_FOLLOWED_ID_FK, Indexes.FOLLOW_RELATION_FOLLOW_RELATION_FOLLOWING_ID_FK, Indexes.FOLLOW_RELATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FollowRelationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FOLLOW_RELATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FollowRelationRecord> getPrimaryKey() {
        return Keys.KEY_FOLLOW_RELATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FollowRelationRecord>> getKeys() {
        return Arrays.<UniqueKey<FollowRelationRecord>>asList(Keys.KEY_FOLLOW_RELATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FollowRelationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FollowRelationRecord, ?>>asList(Keys.FOLLOW_RELATION_FOLLOWED_ID_FK, Keys.FOLLOW_RELATION_USER_ID_FK, Keys.FOLLOW_RELATION_FOLLOWING_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FollowRelation as(String alias) {
        return new FollowRelation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FollowRelation as(Name alias) {
        return new FollowRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FollowRelation rename(String name) {
        return new FollowRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FollowRelation rename(Name name) {
        return new FollowRelation(name, null);
    }
}
